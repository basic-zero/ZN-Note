/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.Stack;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Gia Nguyen
 */
public class FindAndReplace extends javax.swing.JDialog {

    /**
     * Creates new form FindAndReplace
     */
    Main parent;
    private Integer indexOfResult = -1;
    private Vector<Integer> result = new Vector<Integer>();
    String textFind = new String();
    String textReplace = new String();
    String inputText = new String();
    public FindAndReplace(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = (Main) parent;
        initComponents();
        tfFind.setText(this.parent.taMain.getSelectedText());
        Thread evenTextChange = new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    if (!tfReplace.getText().isEmpty()) {
                        btnReplace.setEnabled(true);
                        btnReplaceAll.setEnabled(true);
                    } else {
                        btnReplace.setEnabled(false);
                        btnReplaceAll.setEnabled(false);
                    }
                    if (!tfFind.getText().isEmpty()) {
                        btnFind.setEnabled(true);
                    } else {
                        btnFind.setEnabled(false);
                        btnReplace.setEnabled(false);
                        btnReplaceAll.setEnabled(false);
                    }
                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(FindAndReplace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        evenTextChange.start();
    }

    public void showFindAndReplace() {
        this.setVisible(true);
        this.setAlwaysOnTop(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pMain = new javax.swing.JPanel();
        lblFind = new javax.swing.JLabel();
        tfFind = new javax.swing.JTextField();
        lblReplace = new javax.swing.JLabel();
        tfReplace = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnReplace = new javax.swing.JButton();
        btnReplaceAll = new javax.swing.JButton();

        setTitle("Find and Replace");
        setLocation(parent.getLocation().x, parent.getLocation().y);
        setResizable(false);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        pMain.setLayout(jPanel1Layout);

        lblFind.setText("Find");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pMain.add(lblFind, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pMain.add(tfFind, gridBagConstraints);

        lblReplace.setText("Replace");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pMain.add(lblReplace, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pMain.add(tfReplace, gridBagConstraints);

        btnFind.setText("Find next");
        btnFind.setEnabled(false);
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        pMain.add(btnFind, gridBagConstraints);

        btnReplace.setText("Replace");
        btnReplace.setEnabled(false);
        btnReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        pMain.add(btnReplace, gridBagConstraints);

        btnReplaceAll.setText("Replace All");
        btnReplaceAll.setEnabled(false);
        btnReplaceAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        pMain.add(btnReplaceAll, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMain, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pMain, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        if (findResult(0, false) == 0) {
            JOptionPane.showMessageDialog(this, "Can not find it");
            textFind= "";
            return;
        }
        indexOfResult++;
        parent.taMain.requestFocus();
        parent.taMain.select(result.get(indexOfResult), result.get(indexOfResult) + tfFind.getText().length());
        if (indexOfResult == result.size() - 1) {
            indexOfResult = -1;
        }
    }//GEN-LAST:event_btnFindActionPerformed
    private Boolean replaced = false;
    private void btnReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceActionPerformed
        if (!textReplace.equals(tfReplace.getText())) {
            textReplace = tfReplace.getText();
            if (findResult(0, true) == 0) {
                JOptionPane.showMessageDialog(this, "Can not find it");
                textReplace="";
                return;
            }
        }

        if (replaced) {
            replaced = false;
            if (indexOfResult > result.size() - 1) {
                JOptionPane.showMessageDialog(this, "Replace All done");
                return;
            } else {
                parent.taMain.replaceSelection(tfReplace.getText());
                findResult(result.get(indexOfResult) + tfReplace.getText().length(), true);
            }
        } else {
            replaced = true;
            indexOfResult++;
            if (indexOfResult > result.size() - 1) {
                JOptionPane.showMessageDialog(this, "Replace All done");
                return;
            } else {
                parent.taMain.requestFocus();
                parent.taMain.select(result.get(indexOfResult), result.get(indexOfResult) + tfFind.getText().length());
            }
        }

    }//GEN-LAST:event_btnReplaceActionPerformed

    private void btnReplaceAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceAllActionPerformed

        if (!textReplace.equals(tfReplace.getText())) {
            textReplace = tfReplace.getText();
            if (findResult(0, true) == 0) {
                JOptionPane.showMessageDialog(this, "Can not find it");
                textReplace="";
                return;
            }
        }
        while (indexOfResult < result.size() - 1) {
            indexOfResult++;
            parent.taMain.requestFocus();
            parent.taMain.select(result.get(indexOfResult), result.get(indexOfResult) + tfFind.getText().length());
            parent.taMain.replaceSelection(tfReplace.getText());
            findResult(result.get(indexOfResult) + tfReplace.getText().length(), true);
        }
        JOptionPane.showMessageDialog(this, "Replace All done");
    }//GEN-LAST:event_btnReplaceAllActionPerformed
    private int findResult(int spos, Boolean mode) {
        if (!textFind.equals(tfFind.getText()) || mode || !inputText.equals(parent.taMain.getText())) {
            textFind = tfFind.getText();
            inputText= parent.taMain.getText();
            result.clear();
            indexOfResult = -1;
            int pos = spos;
            while ((pos = inputText.indexOf(tfFind.getText(), pos)) != -1) {
                result.add(pos++);
            }
        }
        return result.size();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindAndReplace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindAndReplace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindAndReplace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindAndReplace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindAndReplace dialog = new FindAndReplace(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnReplace;
    private javax.swing.JButton btnReplaceAll;
    private javax.swing.JLabel lblFind;
    private javax.swing.JLabel lblReplace;
    private javax.swing.JPanel pMain;
    private javax.swing.JTextField tfFind;
    private javax.swing.JTextField tfReplace;
    // End of variables declaration//GEN-END:variables
}
